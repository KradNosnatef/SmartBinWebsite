import JSON

def on_button_pressed_a():
    HX711.set_scale(5000)
    HX711.tare(10)
input.on_button_pressed(Button.A, on_button_pressed_a)

serial.redirect_to_usb()

valor2 = 0
HX711.SetPIN_DOUT(DigitalPin.P0)
HX711.SetPIN_SCK(DigitalPin.P8)
HX711.begin()
radio.set_group(40)

#[0] is door switch, [1] is vibrate
alertList=[0,0]

def switchDoorSensingService():
    global alertList
    if abs(input.rotation(Rotation.PITCH))>100 or abs(input.rotation(Rotation.PITCH))<80:
        alertList[0]=1

def getAccelerationSum():
    
    return int(Math.sqrt(input.acceleration(Dimension.X)**2+input.acceleration(Dimension.Y)**2+input.acceleration(Dimension.Z)**2))

startSensingGate=2000
sendAlertGate=15000
sensingTimeLimit=10000
startVibrationSensing=False
sensingTimeCounter=0
sensingIntegrationCounter=0

def vibrationSensingService():
    global alertList

    global startSensingGate
    global sendAlertGate
    global sensingTimeLimit
    global startVibrationSensing
    global sensingTimeCounter
    global sensingIntegrationCounter

    accelerationSum=getAccelerationSum()
    if startVibrationSensing==False:
        if accelerationSum>startSensingGate:startVibrationSensing=True

    if sensingTimeCounter>sensingTimeLimit:
        if sensingIntegrationCounter>sendAlertGate:
            alertList[1]=1
        startVibrationSensing=False
        sensingTimeCounter=0
        sensingIntegrationCounter=0

    if startVibrationSensing==True:
        sensingTimeCounter=sensingTimeCounter+1000
        sensingIntegrationCounter=sensingIntegrationCounter+accelerationSum

    pause(1000)

def radioSendingService():
    global alertList

    radio.send_value("weight", HX711.get_units(10)*20)
    radio.send_value("roll", input.rotation(Rotation.ROLL))
    radio.send_value("pitch", input.rotation(Rotation.PITCH))
    radio.send_value("distance", int(grove.measure_in_centimeters(DigitalPin.P1)*10))
    radio.send_value("alert0", alertList[0])
    radio.send_value("alert1", alertList[1])
    pause(50)
    radio.send_number(1)

    if alertList[0]==1:alertList[0]=0
    if alertList[1]==1:alertList[1]=0

    basic.pause(10050)

basic.forever(vibrationSensingService)
basic.forever(radioSendingService)